{"version":3,"sources":["services/fetchApiPokemon.js","components/Card/index.js","components/PokemonList/index.js","components/FilterInput/index.js","components/Loading/index.js","components/NotFound/index.js","components/Home/index.js","components/Error/index.js","components/DetailPokemon/index.js","components/App/index.js","index.js"],"names":["fetchPokemon","fetch","then","response","json","Card","props","pokemon","react_default","a","createElement","className","src","sprites","front_default","alt","name","id","evolution_from","types","map","type","index","key","concat","PokemonList","pokemonsArr","react_router_dom","to","components_Card","FilterInput","filterSearch","handleInputChange","react","htmlFor","children","placeholder","value","onChange","Loading","NotFound","Home","_this$props","this","isLoading","searchPokemon","filter","pokemons","toLowerCase","includes","length","sort","b","components_Loading","components_NotFound","components_PokemonList","_this$props2","components_FilterInput","paintPokemon","Component","Error","newType","i","element","push","join","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","paintPage","object","loading","components_Error","back_default","height","weight","abilities","ability","evolves","DetailPokemon","characterPokemon","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","getData","_this2","data","pokemonsList","results","_loop","pokemonData","url","infoPokemon","species","dataEvolution","evolves_from_species","setState","prevState","toConsumableArray","e","currentTarget","find","parseInt","_this3","_this$state","react_router","exact","path","render","components_Home","routerProps","components_DetailPokemon","getCharacter","match","params","React","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0fbe67fa.chunk.js","sourcesContent":["const URL_API = 'https://pokeapi.co/api/v2/pokemon/?limit=25';\n\nconst fetchPokemon = () => fetch(URL_API).then(response => response.json());\n\nexport default fetchPokemon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst Card = props => {\n    const { pokemon } = props;\n    return (\n        <div className=\"card\">\n            <div className=\"wrapper__image\">\n                <img\n                    className=\"card__image\"\n                    src={pokemon.sprites.front_default}\n                    alt={pokemon.name}\n                />\n                <p className=\"card__id\">ID/{pokemon.id}</p>\n            </div>\n            <div className=\"wrapper__name\">\n                <p className=\"card__name\">{pokemon.name}</p>\n                {pokemon.evolution_from !== null ? (\n                    <p className=\"card__evolution\">\n                        Evolves from:{' '}\n                        <span className=\"card__evolution--name\">\n                            {pokemon.evolution_from}\n                        </span>\n                    </p>\n                ) : (\n                    <p className=\"card__evolution\">First pokemon in the line</p>\n                )}\n                <ul className=\"card__types\">\n                    {pokemon.types.map((type, index) => (\n                        <li\n                            key={index}\n                            className={`type-pokemon ${type.type.name}`}\n                        >\n                            {type.type.name}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nCard.propTypes = {\n    pokemon: PropTypes.object.isRequired\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Card from '../Card';\nimport './styles.scss';\n\nconst PokemonList = props => {\n    const { pokemonsArr } = props;\n    return (\n        <ul className=\"pokemon-list\">\n            {pokemonsArr.map(pokemon => {\n                return (\n                    <li key={`${pokemon.id}`}>\n                        <Link to={`/pokemon-detail/${pokemon.id}`}>\n                            <Card pokemon={pokemon} />\n                        </Link>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n\nPokemonList.propTypes = {\n    pokemonsArr: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired\n};\n\nexport default PokemonList;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nconst FilterInput = props => {\n    const { filterSearch, handleInputChange } = props;\n    return (\n        <Fragment>\n            <label htmlFor=\"searchPokemon\" className=\"hidden\">\n                {props.children}\n            </label>\n            <input\n                type=\"text\"\n                name=\"searchPokemon\"\n                id=\"searchPokemon\"\n                placeholder={props.children}\n                value={filterSearch}\n                onChange={handleInputChange}\n            />\n        </Fragment>\n    );\n};\n\nFilterInput.propTypes = {\n    filterSearch: PropTypes.string.isRequired,\n    handleInputChange: PropTypes.func.isRequired\n};\n\nexport default FilterInput;\n","import React from 'react';\nimport './styles.scss';\n\nconst Loading = () => {\n    return <div className=\"pokeball-loading\" />;\n};\n\nexport default Loading;\n","import React, { Fragment } from 'react';\nimport './styles.scss';\n\nconst NotFound = () => {\n    return (\n        <Fragment>\n            <div className=\"not-found__image\"></div>\n            <p className=\"not-found__info\">No match found</p>\n        </Fragment>\n    );\n}\n \nexport default NotFound;","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport PokemonList from '../PokemonList';\nimport FilterInput from '../FilterInput';\nimport Loading from '../Loading';\nimport NotFound from '../NotFound';\n\nimport './styles.scss';\n\nclass Home extends Component {\n    paintPokemon() {\n        const { filterSearch, pokemonsArr, isLoading } = this.props;\n        const searchPokemon = pokemonsArr\n            .filter(pokemons =>\n                pokemons.name\n                    .toLowerCase()\n                    .includes(filterSearch.length >= 3 ? filterSearch : '')\n            )\n            .sort((a, b) => a.id - b.id);\n\n        if (isLoading) {\n            return <Loading />;\n        } else if (searchPokemon.length === 0) {\n            return <NotFound />;\n        } else {\n            return <PokemonList pokemonsArr={searchPokemon} />;\n        }\n    }\n    render() {\n        const { filterSearch, handleInputChange } = this.props;\n\n        return (\n            <Fragment>\n                <form>\n                    <FilterInput\n                        filterSearch={filterSearch}\n                        handleInputChange={handleInputChange}\n                    >\n                        Filtra pokemon por nombre\n                    </FilterInput>\n                </form>\n                <section className=\"main-container\">\n                    {this.paintPokemon()}\n                </section>\n            </Fragment>\n        );\n    }\n}\n\nHome.propTypes = {\n    filterSearch: PropTypes.string.isRequired,\n    handleInputChange: PropTypes.func.isRequired,\n    pokemonsArr: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    isLoading: PropTypes.bool.isRequired,\n};\n\nexport default Home;\n","import React, { Fragment } from 'react';\nimport './styles.scss';\n\nconst Error = () => {\n    return (\n        <Fragment>\n            <div className=\"error404__image\"></div>\n            <p className=\"error404__info\">Page not found (error 404)</p>\n        </Fragment>\n    );\n}\n \nexport default Error;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Loading from '../Loading';\nimport Error from '../Error';\n\nimport './styles.scss';\n\nconst evolves = pokemon => {\n    const { evolution_from } = pokemon;\n    if (evolution_from === null) {\n        return 'has not previous evolution';\n    } else {\n        return <span>evolves from <span className=\"detail__text--capitalize\">{evolution_from}</span></span>;\n    }\n};\n\nconst types = pokemon => {\n    if (pokemon) {\n        if (pokemon.types.length === 1) {\n            for (const type of pokemon.types) {\n                return type.type.name;\n            }\n        } else {\n            let newType = [];\n            for (let i = 0; i < pokemon.types.length; i++) {\n                const element = pokemon.types[i].type.name;\n                newType.push(element);\n            }\n            return newType.join('-');\n        }\n    }\n};\n\nconst paintPage = (object, loading) => {\n    if (loading) {\n        return <Loading />\n    } else if (object === undefined){\n        return <Error />\n    } else {\n        return (\n            <Fragment>\n                <Link to=\"/\" className=\"link__back\">\n                    <div className=\"link__arrow\" />\n                </Link>\n                <article className={`detail ${types(object)}`}>\n                    <div className=\"wrapper__images\">\n                        <img\n                            src={object.sprites.front_default}\n                            alt={`Front of ${object.name}`}\n                        />\n                        <img\n                            src={object.sprites.back_default}\n                            alt={`Back of ${object.name}`}\n                        />\n                    </div>\n                    <div className=\"wrapper__info\">\n                        <h1 className=\"detail__name\">\n                            {object.name}\n                        </h1>\n                        <p className=\"detail__text\">\n                            <span className=\"detail__text--highlight\">\n                                Height:\n                            </span>{' '}\n                            {object.height} m\n                        </p>\n                        <p className=\"detail__text\">\n                            <span className=\"detail__text--highlight\">\n                                Weight:\n                            </span>{' '}\n                            {object.weight} kg\n                        </p>\n                        <p className=\"detail__text\">\n                            <span className=\"detail__text--highlight\">\n                                Abilities:\n                            </span>\n                        </p>\n                        <ul className=\"detail__abilities-list\">\n                            {object.abilities.map((ability, index) => (\n                                <li key={index} className=\"abilities-list__ability\">\n                                    {ability.ability.name}\n                                </li>\n                            ))}\n                        </ul>\n                        <p className=\"detail__text detail__evolution\">\n                            <span className=\"detail__text--capitalize\">{object.name}</span>{' '}\n                            {evolves(object)}\n                        </p>\n                    </div>\n                </article>\n            </Fragment>\n        )\n    }\n};\n\nconst DetailPokemon = props => {\n    const { characterPokemon, isLoading } = props;\n\n    return (\n        <Fragment>\n            {paintPage(characterPokemon, isLoading)}\n        </Fragment>\n    );\n};\n\nDetailPokemon.propTypes = {\n    characterPokemon: PropTypes.object,\n    isLoading: PropTypes.bool.isRequired\n};\n\nexport default DetailPokemon;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport fetchPokemon from '../../services/fetchApiPokemon';\nimport Home from '../Home';\nimport DetailPokemon from '../DetailPokemon';\n\nimport './styles.scss';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pokemonsArr: [],\n            isLoading: true,\n            filterSearch: ''\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData() {\n        fetchPokemon().then(data => {\n            const pokemonsList = data.results;\n            for (const pokemon of pokemonsList) {\n                let pokemonData = {};\n                fetch(pokemon.url)\n                    .then(response => response.json())\n                    .then(infoPokemon => {\n                        pokemonData = infoPokemon;\n                        fetch(pokemonData.species.url)\n                            .then(response => response.json())\n                            .then(dataEvolution => {\n                                pokemonData.evolution_from =\n                                    dataEvolution.evolves_from_species !== null\n                                        ? dataEvolution.evolves_from_species.name\n                                        : null;\n                                this.setState(prevState => {\n                                    return {\n                                        pokemonsArr: [\n                                            ...prevState.pokemonsArr,\n                                            pokemonData\n                                        ],\n                                        isLoading: false\n                                    };\n                                });\n                            });\n                    });\n            }\n        });\n    }\n\n    handleInputChange(e) {\n        const { value } = e.currentTarget;\n        this.setState({\n            filterSearch: value.toLowerCase()\n        });\n    }\n\n    getCharacter(id) {\n        const { pokemonsArr } = this.state;\n        return pokemonsArr.find(pokemon => pokemon.id === parseInt(id));\n    }\n\n    render() {\n        const { filterSearch, isLoading, pokemonsArr } = this.state;\n        return (\n            <div className=\"App\">\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={() => (\n                            <Home\n                                filterSearch={filterSearch}\n                                handleInputChange={this.handleInputChange}\n                                isLoading={isLoading}\n                                pokemonsArr={pokemonsArr}\n                            />\n                        )}\n                    />\n                    <Route \n                        path=\"/pokemon-detail/:id\" \n                        render={routerProps => (\n                            <DetailPokemon \n                                characterPokemon={this.getCharacter(routerProps.match.params.id)}\n                                isLoading={isLoading}\n                            />\n                        )}\n                    />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}